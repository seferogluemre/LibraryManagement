/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedTransfersRouteImport } from './routes/_authenticated/transfers'
import { Route as AuthenticatedTransferHistoryRouteImport } from './routes/_authenticated/transfer-history'
import { Route as AuthenticatedStudentsRouteImport } from './routes/_authenticated/students'
import { Route as AuthenticatedPublishersRouteImport } from './routes/_authenticated/publishers'
import { Route as AuthenticatedOnlineUsersRouteImport } from './routes/_authenticated/online-users'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedClassesRouteImport } from './routes/_authenticated/classes'
import { Route as AuthenticatedCategoriesRouteImport } from './routes/_authenticated/categories'
import { Route as AuthenticatedBooksRouteImport } from './routes/_authenticated/books'
import { Route as AuthenticatedAuthorsRouteImport } from './routes/_authenticated/authors'
import { Route as AuthenticatedAssignmentsRouteImport } from './routes/_authenticated/assignments'
import { Route as AuthenticatedStudentIdRouteImport } from './routes/_authenticated/$studentId'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedTransfersRoute = AuthenticatedTransfersRouteImport.update({
  id: '/transfers',
  path: '/transfers',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTransferHistoryRoute =
  AuthenticatedTransferHistoryRouteImport.update({
    id: '/transfer-history',
    path: '/transfer-history',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedStudentsRoute = AuthenticatedStudentsRouteImport.update({
  id: '/students',
  path: '/students',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedPublishersRoute = AuthenticatedPublishersRouteImport.update({
  id: '/publishers',
  path: '/publishers',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedOnlineUsersRoute =
  AuthenticatedOnlineUsersRouteImport.update({
    id: '/online-users',
    path: '/online-users',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedClassesRoute = AuthenticatedClassesRouteImport.update({
  id: '/classes',
  path: '/classes',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedCategoriesRoute = AuthenticatedCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedBooksRoute = AuthenticatedBooksRouteImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAuthorsRoute = AuthenticatedAuthorsRouteImport.update({
  id: '/authors',
  path: '/authors',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAssignmentsRoute =
  AuthenticatedAssignmentsRouteImport.update({
    id: '/assignments',
    path: '/assignments',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedStudentIdRoute = AuthenticatedStudentIdRouteImport.update({
  id: '/$studentId',
  path: '/$studentId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/$studentId': typeof AuthenticatedStudentIdRoute
  '/assignments': typeof AuthenticatedAssignmentsRoute
  '/authors': typeof AuthenticatedAuthorsRoute
  '/books': typeof AuthenticatedBooksRoute
  '/categories': typeof AuthenticatedCategoriesRoute
  '/classes': typeof AuthenticatedClassesRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/online-users': typeof AuthenticatedOnlineUsersRoute
  '/publishers': typeof AuthenticatedPublishersRoute
  '/students': typeof AuthenticatedStudentsRoute
  '/transfer-history': typeof AuthenticatedTransferHistoryRoute
  '/transfers': typeof AuthenticatedTransfersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/$studentId': typeof AuthenticatedStudentIdRoute
  '/assignments': typeof AuthenticatedAssignmentsRoute
  '/authors': typeof AuthenticatedAuthorsRoute
  '/books': typeof AuthenticatedBooksRoute
  '/categories': typeof AuthenticatedCategoriesRoute
  '/classes': typeof AuthenticatedClassesRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/online-users': typeof AuthenticatedOnlineUsersRoute
  '/publishers': typeof AuthenticatedPublishersRoute
  '/students': typeof AuthenticatedStudentsRoute
  '/transfer-history': typeof AuthenticatedTransferHistoryRoute
  '/transfers': typeof AuthenticatedTransfersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/$studentId': typeof AuthenticatedStudentIdRoute
  '/_authenticated/assignments': typeof AuthenticatedAssignmentsRoute
  '/_authenticated/authors': typeof AuthenticatedAuthorsRoute
  '/_authenticated/books': typeof AuthenticatedBooksRoute
  '/_authenticated/categories': typeof AuthenticatedCategoriesRoute
  '/_authenticated/classes': typeof AuthenticatedClassesRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/online-users': typeof AuthenticatedOnlineUsersRoute
  '/_authenticated/publishers': typeof AuthenticatedPublishersRoute
  '/_authenticated/students': typeof AuthenticatedStudentsRoute
  '/_authenticated/transfer-history': typeof AuthenticatedTransferHistoryRoute
  '/_authenticated/transfers': typeof AuthenticatedTransfersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/$studentId'
    | '/assignments'
    | '/authors'
    | '/books'
    | '/categories'
    | '/classes'
    | '/dashboard'
    | '/online-users'
    | '/publishers'
    | '/students'
    | '/transfer-history'
    | '/transfers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/$studentId'
    | '/assignments'
    | '/authors'
    | '/books'
    | '/categories'
    | '/classes'
    | '/dashboard'
    | '/online-users'
    | '/publishers'
    | '/students'
    | '/transfer-history'
    | '/transfers'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/register'
    | '/_authenticated/$studentId'
    | '/_authenticated/assignments'
    | '/_authenticated/authors'
    | '/_authenticated/books'
    | '/_authenticated/categories'
    | '/_authenticated/classes'
    | '/_authenticated/dashboard'
    | '/_authenticated/online-users'
    | '/_authenticated/publishers'
    | '/_authenticated/students'
    | '/_authenticated/transfer-history'
    | '/_authenticated/transfers'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/transfers': {
      id: '/_authenticated/transfers'
      path: '/transfers'
      fullPath: '/transfers'
      preLoaderRoute: typeof AuthenticatedTransfersRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/transfer-history': {
      id: '/_authenticated/transfer-history'
      path: '/transfer-history'
      fullPath: '/transfer-history'
      preLoaderRoute: typeof AuthenticatedTransferHistoryRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/students': {
      id: '/_authenticated/students'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AuthenticatedStudentsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/publishers': {
      id: '/_authenticated/publishers'
      path: '/publishers'
      fullPath: '/publishers'
      preLoaderRoute: typeof AuthenticatedPublishersRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/online-users': {
      id: '/_authenticated/online-users'
      path: '/online-users'
      fullPath: '/online-users'
      preLoaderRoute: typeof AuthenticatedOnlineUsersRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/classes': {
      id: '/_authenticated/classes'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof AuthenticatedClassesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/categories': {
      id: '/_authenticated/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AuthenticatedCategoriesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/books': {
      id: '/_authenticated/books'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof AuthenticatedBooksRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/authors': {
      id: '/_authenticated/authors'
      path: '/authors'
      fullPath: '/authors'
      preLoaderRoute: typeof AuthenticatedAuthorsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/assignments': {
      id: '/_authenticated/assignments'
      path: '/assignments'
      fullPath: '/assignments'
      preLoaderRoute: typeof AuthenticatedAssignmentsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/$studentId': {
      id: '/_authenticated/$studentId'
      path: '/$studentId'
      fullPath: '/$studentId'
      preLoaderRoute: typeof AuthenticatedStudentIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedStudentIdRoute: typeof AuthenticatedStudentIdRoute
  AuthenticatedAssignmentsRoute: typeof AuthenticatedAssignmentsRoute
  AuthenticatedAuthorsRoute: typeof AuthenticatedAuthorsRoute
  AuthenticatedBooksRoute: typeof AuthenticatedBooksRoute
  AuthenticatedCategoriesRoute: typeof AuthenticatedCategoriesRoute
  AuthenticatedClassesRoute: typeof AuthenticatedClassesRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedOnlineUsersRoute: typeof AuthenticatedOnlineUsersRoute
  AuthenticatedPublishersRoute: typeof AuthenticatedPublishersRoute
  AuthenticatedStudentsRoute: typeof AuthenticatedStudentsRoute
  AuthenticatedTransferHistoryRoute: typeof AuthenticatedTransferHistoryRoute
  AuthenticatedTransfersRoute: typeof AuthenticatedTransfersRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedStudentIdRoute: AuthenticatedStudentIdRoute,
  AuthenticatedAssignmentsRoute: AuthenticatedAssignmentsRoute,
  AuthenticatedAuthorsRoute: AuthenticatedAuthorsRoute,
  AuthenticatedBooksRoute: AuthenticatedBooksRoute,
  AuthenticatedCategoriesRoute: AuthenticatedCategoriesRoute,
  AuthenticatedClassesRoute: AuthenticatedClassesRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedOnlineUsersRoute: AuthenticatedOnlineUsersRoute,
  AuthenticatedPublishersRoute: AuthenticatedPublishersRoute,
  AuthenticatedStudentsRoute: AuthenticatedStudentsRoute,
  AuthenticatedTransferHistoryRoute: AuthenticatedTransferHistoryRoute,
  AuthenticatedTransfersRoute: AuthenticatedTransfersRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
